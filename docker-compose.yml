#version: "3.9"
services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: finqa
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 20
    networks:
      - appnet

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - appnet

  ollama:
    build: ./ollama
    container_name: ollama
    ports:
      - "11434:11434"
    networks:
      - appnet
    environment:
      OLLAMA_PULL_MODELS: "qwen2.5:3b bge-m3"
    #healthcheck:
    #  test: ["CMD-SHELL", "wget -qO- http://localhost:11434/api/tags >/dev/null 2>&1"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 60

  api:
    build: ./api
    environment:
      POSTGRES_URL: postgres://postgres:postgres@postgres:5432/finqa?sslmode=disable
      REDIS_ADDR: redis:6379
      OLLAMA_HOST: http://ollama:11434
      MODEL_NAME: qwen2.5:3b
      EMBED_MODEL: bge-m3
      FAISS_HOST: http://faiss:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      #ollama:
      #  condition: service_healthy
      faiss:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - appnet

  faiss:
    build: ./faiss
    ports:
      - "8000:8000"
    networks:
      - appnet

  web:
    build:
      context: ./web
      args:
        VITE_API_URL: http://localhost:8080
    depends_on:
      - api
    ports:
      - "3000:80"
    networks:
      - appnet

volumes:
  pgdata: {}

networks:
  appnet:
    name: contest-appnet
    driver: bridge


